package org.monerokon.xmrpos.ui.theme

import androidx.compose.ui.graphics.Color

private val DraculaBackground = Color(0xFF282A36)
private val DraculaSurface = Color(0xFF303241)
private val DraculaSurfaceBright = Color(0xFF353849)
private val DraculaSurfaceDim = Color(0xFF1E1F29)
private val DraculaSurfaceLowest = Color(0xFF181920)
private val DraculaSurfaceLow = Color(0xFF1F2029)
private val DraculaSurfaceContainer = Color(0xFF252735)
private val DraculaSurfaceHigh = Color(0xFF2B2D3B)
private val DraculaSurfaceHighest = Color(0xFF323447)

private val DraculaForeground = Color(0xFFF8F8F2)
private val DraculaMuted = Color(0xFF6272A4)
private val DraculaSelection = Color(0xFF44475A)
private val DraculaDarkText = Color(0xFF1A1B24)

private val DraculaPrimary = Color(0xFF8BE9FD)
private val DraculaPrimaryContainer = Color(0xFF383A4A)
private val DraculaSecondary = Color(0xFF8BE9FD)
private val DraculaTertiary = Color(0xFF50FA7B)
private val DraculaTertiaryContainer = Color(0xFFF1FA8C)
private val DraculaError = Color(0xFFFF5555)
private val DraculaErrorContainer = Color(0xFFFF6E6E)

val primaryLight = DraculaPrimary
val onPrimaryLight = DraculaDarkText
val primaryContainerLight = DraculaPrimaryContainer
val onPrimaryContainerLight = DraculaDarkText
val secondaryLight = DraculaSecondary
val onSecondaryLight = DraculaDarkText
val secondaryContainerLight = DraculaSelection
val onSecondaryContainerLight = DraculaForeground
val tertiaryLight = DraculaTertiary
val onTertiaryLight = DraculaDarkText
val tertiaryContainerLight = DraculaTertiaryContainer
val onTertiaryContainerLight = DraculaDarkText
val errorLight = DraculaError
val onErrorLight = DraculaDarkText
val errorContainerLight = DraculaErrorContainer
val onErrorContainerLight = DraculaDarkText
val backgroundLight = DraculaBackground
val onBackgroundLight = DraculaForeground
val surfaceLight = DraculaSurface
val onSurfaceLight = DraculaForeground
val surfaceVariantLight = DraculaSelection
val onSurfaceVariantLight = DraculaForeground
val outlineLight = DraculaMuted
val outlineVariantLight = DraculaSelection
val scrimLight = Color(0xFF000000)
val inverseSurfaceLight = DraculaForeground
val inverseOnSurfaceLight = DraculaDarkText
val inversePrimaryLight = DraculaSecondary
val surfaceDimLight = DraculaSurfaceDim
val surfaceBrightLight = DraculaSurfaceBright
val surfaceContainerLowestLight = DraculaSurfaceLowest
val surfaceContainerLowLight = DraculaSurfaceLow
val surfaceContainerLight = DraculaSurfaceContainer
val surfaceContainerHighLight = DraculaSurfaceHigh
val surfaceContainerHighestLight = DraculaSurfaceHighest

val primaryDark = primaryLight
val onPrimaryDark = onPrimaryLight
val primaryContainerDark = primaryContainerLight
val onPrimaryContainerDark = onPrimaryContainerLight
val secondaryDark = secondaryLight
val onSecondaryDark = onSecondaryLight
val secondaryContainerDark = secondaryContainerLight
val onSecondaryContainerDark = onSecondaryContainerLight
val tertiaryDark = tertiaryLight
val onTertiaryDark = onTertiaryLight
val tertiaryContainerDark = tertiaryContainerLight
val onTertiaryContainerDark = onTertiaryContainerLight
val errorDark = errorLight
val onErrorDark = onErrorLight
val errorContainerDark = errorContainerLight
val onErrorContainerDark = onErrorContainerLight
val backgroundDark = backgroundLight
val onBackgroundDark = onBackgroundLight
val surfaceDark = surfaceLight
val onSurfaceDark = onSurfaceLight
val surfaceVariantDark = surfaceVariantLight
val onSurfaceVariantDark = onSurfaceVariantLight
val outlineDark = outlineLight
val outlineVariantDark = outlineVariantLight
val scrimDark = scrimLight
val inverseSurfaceDark = inverseSurfaceLight
val inverseOnSurfaceDark = inverseOnSurfaceLight
val inversePrimaryDark = inversePrimaryLight
val surfaceDimDark = surfaceDimLight
val surfaceBrightDark = surfaceBrightLight
val surfaceContainerLowestDark = surfaceContainerLowestLight
val surfaceContainerLowDark = surfaceContainerLowLight
val surfaceContainerDark = surfaceContainerLight
val surfaceContainerHighDark = surfaceContainerHighLight
val surfaceContainerHighestDark = surfaceContainerHighestLight
